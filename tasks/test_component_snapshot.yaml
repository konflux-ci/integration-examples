apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: test-snapshot-component
spec:
  params:
    - name: SNAPSHOT
      description: The JSON string of the Snapshot under test
    - name: COMPONENTS_TO_CHECK
      description: A space-separated list of components that will be considered for the check, other components will be ignored
      default: ""
      type: string
  steps:
    - name: test-snapshot-component
      image: quay.io/konflux-ci/konflux-test:stable
      workingDir: /workspace
      env:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: COMPONENTS_TO_CHECK
          value: $(params.COMPONENTS_TO_CHECK)
        - name: SNAPSHOT_URL
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['pac.test.appstudio.openshift.io/source-repo-url']
        - name: SNAPSHOT_SHA
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['pac.test.appstudio.openshift.io/sha']
      script: |
        #!/bin/bash
        set -e
        snapshotComponents=$(jq -c '.components[]' <<< "${SNAPSHOT}")
        snapshotUrlUrlWithoutSuffix=$(echo $SNAPSHOT_URL | sed 's/\.git$//')
        echo "Snapshot URL: ${snapshotUrlUrlWithoutSuffix} and SHA: ${SNAPSHOT_SHA}"
        echo "Components that will be checked against the Snapshot: ${COMPONENTS_TO_CHECK}"
        
        while read componentEntry
        do
          # Variables
          componentName=$(echo "${componentEntry}" | jq -r '.name')
          componentUrl=$(echo "${componentEntry}" | jq -r '.source.git.url')
          componentUrlWithoutSuffix=$(echo $componentUrl | sed 's/\.git$//')
          componentSha=$(echo "${componentEntry}" | jq -r '.source.git.revision')
          
          if [[ $(echo "${COMPONENTS_TO_CHECK}" | wc -w) -gt 0 && -z $(echo "${COMPONENTS_TO_CHECK}" | grep -w "${componentName}" ) ]]; then
            echo "Skipping component: ${componentName} since it isn't in the list of components to be checked"
            continue
          fi
          echo "Checking component: ${componentName} with URL: ${componentUrlWithoutSuffix} and SHA: ${componentSha}"
        
          # Check if component git url equals to snapshot git url, if yes check if the snapshot SHA equals to component SHA
          if [[ ${componentUrlWithoutSuffix} == ${snapshotUrlUrlWithoutSuffix} ]]; then
              if [[ ${componentSha} != ${SNAPSHOT_SHA} ]]; then
              echo "FAIL: Component: ${componentName} has different SHA: $componentSha than the snapshot, SHA: $SNAPSHOT_SHA."
              exit 1
              fi
          fi
          echo "SUCCESS: Component ${componentName} matches snapshot SHA."
        done < <(echo "$snapshotComponents")
